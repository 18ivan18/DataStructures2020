#include "node.h"

/***********************************************************************
  Задача 3. Троично-наредено дърво T с точност R (положително число с
  плаваща запетая в интервала (0,1)) наричаме структура, която се
  характеризира с корен със стойност x (число с плаваща запетая) и три
  троично-наредени поддървета: TL, TM и TR, за които:

  * всички елементи в TL са със стойности < x(1–R);
  * всички елементи в TR са със стойности > x(1+R);
  * всички елементи в TM са със стойности в интервала [x(1–R), x(1+R)].

  Всяко от поддърветата може да е празно. Разглеждаме структура
  TONode, която описва възел в троично-наредено дърво:

  Да се реализира функция

  bool insert(TONode *&root, double x, double R)

  за вмъкване на елемента x в троично-наредено дърво с коренов възел
  root и точност R така, че дървото да остане троично-наредено, като
  вмъкването се осъществява само ако x още не присъства в
  дървото. Функцията да връща true, ако операцията е успешна и
  елементът е вмъкнат и false, в противен случай.
************************************************************************/

/***********************************************************************
 РЕШЕНИЕ:
************************************************************************/

bool insert(TONode *&root, double x, double R);

/***********************************************************************
 КРАЙ НА РЕШЕНИЕТО
************************************************************************/

#define DOCTEST_CONFIG_IMPLEMENT
#include "doctest.h"

/***********************************************************************
  РАЗКОМЕНТИРАЙТЕ СЛЕДВАЩИЯ РЕД, ЗА ДА ВКЛЮЧИТЕ ТЕСТОВЕТЕ
************************************************************************/
//#include "task3_tests.h"

int main ()
{
    // пускане на тестовете
    doctest::Context().run();
    return 0;
}
